{"ast":null,"code":"export const initialState = {\n  cart: [],\n  user: null\n};\nexport const getCartTotal = cart => {\n  return cart === null || cart === void 0 ? void 0 : cart.reduce((total, item) => item.price + total, 0);\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return { ...state,\n        cart: [...state.cart, action.item]\n      };\n\n    case \"REMOVE_FROM_CART\":\n      const productIndex = state.cart.findIndex(cartItem => cartItem.id === action.id);\n      let newCart = [...state.cart];\n\n      if (productIndex >= 0) {\n        newCart.splice(productIndex, 1);\n      } else {\n        console.log(`Can't remove product (id: ${action.id})`);\n      }\n\n      return { ...state,\n        cart: newCart\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/saad/Desktop/Learning/Amazon Clone/amazon-clone/src/reducer.js"],"names":["initialState","cart","user","getCartTotal","reduce","total","item","price","reducer","state","action","console","log","type","productIndex","findIndex","cartItem","id","newCart","splice"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAKP,OAAO,MAAMC,YAAY,GAAIF,IAAD,IAAU;AACpC,SAAOA,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEG,MAAN,CAAa,CAACC,KAAD,EAAQC,IAAR,KAAiBA,IAAI,CAACC,KAAL,GAAaF,KAA3C,EAAkD,CAAlD,CAAP;AACD,CAFM;;AAIP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELR,QAAAA,IAAI,EAAE,CAAC,GAAGQ,KAAK,CAACR,IAAV,EAAgBS,MAAM,CAACJ,IAAvB;AAFD,OAAP;;AAKF,SAAK,kBAAL;AACE,YAAMQ,YAAY,GAAGL,KAAK,CAACR,IAAN,CAAWc,SAAX,CAClBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACO,EADlB,CAArB;AAGA,UAAIC,OAAO,GAAG,CAAC,GAAGT,KAAK,CAACR,IAAV,CAAd;;AACA,UAAIa,YAAY,IAAI,CAApB,EAAuB;AACrBI,QAAAA,OAAO,CAACC,MAAR,CAAeL,YAAf,EAA6B,CAA7B;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BF,MAAM,CAACO,EAAG,GAAnD;AACD;;AACD,aAAO,EACL,GAAGR,KADE;AAELR,QAAAA,IAAI,EAAEiB;AAFD,OAAP;;AAKF,SAAK,UAAL;AACE,aAAO,EACL,GAAGT,KADE;AAELP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFR,OAAP;;AAKF;AACE,aAAOO,KAAP;AA7BJ;AA+BD,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  cart: [],\n  user: null,\n};\n\nexport const getCartTotal = (cart) => {\n  return cart?.reduce((total, item) => item.price + total, 0);\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return {\n        ...state,\n        cart: [...state.cart, action.item],\n      };\n\n    case \"REMOVE_FROM_CART\":\n      const productIndex = state.cart.findIndex(\n        (cartItem) => cartItem.id === action.id\n      );\n      let newCart = [...state.cart];\n      if (productIndex >= 0) {\n        newCart.splice(productIndex, 1);\n      } else {\n        console.log(`Can't remove product (id: ${action.id})`);\n      }\n      return {\n        ...state,\n        cart: newCart,\n      };\n\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}