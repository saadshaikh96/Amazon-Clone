{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/saad/Desktop/Learning/Amazon Clone/amazon-clone/src/Subtotal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"./StateProvider\";\nimport \"./Subtotal.css\";\n\nfunction Subtotal() {\n  _s();\n\n  const [{\n    cart\n  }, dispatch] = useStateValue();\n\n  const calculateSubtotal = cart => {\n    let totalPrice = 0;\n    cart.forEach(item => {\n      totalPrice += item.price;\n    });\n    return totalPrice;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtotal\",\n    children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n      renderText: value => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Subtotal (\", cart === null || cart === void 0 ? void 0 : cart.length, \" items): \", /*#__PURE__*/_jsxDEV(\"strong\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"subtotal__gift\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), \" This order contains a gift\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      prefix: \"$\",\n      decimalScale: 2,\n      value: 0,\n      displayType: \"text\",\n      thousandSeparator: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Proceed to Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Subtotal, \"78S7qmcAdZortMzftiLa2vLyE6Y=\", false, function () {\n  return [useStateValue];\n});\n\n_c = Subtotal;\nexport default Subtotal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subtotal\");","map":{"version":3,"sources":["/Users/saad/Desktop/Learning/Amazon Clone/amazon-clone/src/Subtotal.js"],"names":["React","CurrencyFormat","useStateValue","Subtotal","cart","dispatch","calculateSubtotal","totalPrice","forEach","item","price","value","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,gBAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAWC,QAAX,IAAuBH,aAAa,EAA1C;;AAEA,QAAMI,iBAAiB,GAAIF,IAAD,IAAU;AAClC,QAAIG,UAAU,GAAG,CAAjB;AACAH,IAAAA,IAAI,CAACI,OAAL,CAAcC,IAAD,IAAU;AACrBF,MAAAA,UAAU,IAAIE,IAAI,CAACC,KAAnB;AACD,KAFD;AAGA,WAAOH,UAAP;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,UAAU,EAAGI,KAAD,iBACV;AAAA,gCACE;AAAA,mCACaP,IADb,aACaA,IADb,uBACaA,IAAI,CAAEQ,MADnB,4BACmC;AAAA;AAAA;AAAA;AAAA,kBADnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,SAAS,EAAC,gBAAjB;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,sBAFJ;AAWE,MAAA,MAAM,EAAE,GAXV;AAYE,MAAA,YAAY,EAAE,CAZhB;AAaE,MAAA,KAAK,EAAE,CAbT;AAcE,MAAA,WAAW,EAAE,MAdf;AAeE,MAAA,iBAAiB,EAAE;AAfrB;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAjCQT,Q;UACsBD,a;;;KADtBC,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"./StateProvider\";\nimport \"./Subtotal.css\";\n\nfunction Subtotal() {\n  const [{ cart }, dispatch] = useStateValue();\n\n  const calculateSubtotal = (cart) => {\n    let totalPrice = 0;\n    cart.forEach((item) => {\n      totalPrice += item.price;\n    });\n    return totalPrice;\n  };\n  return (\n    <div className=\"subtotal\">\n      <CurrencyFormat\n        renderText={(value) => (\n          <>\n            <p>\n              Subtotal ({cart?.length} items): <strong></strong>\n            </p>\n            <small className=\"subtotal__gift\">\n              <input type=\"checkbox\" /> This order contains a gift\n            </small>\n          </>\n        )}\n        prefix={\"$\"}\n        decimalScale={2}\n        value={0}\n        displayType={\"text\"}\n        thousandSeparator={true}\n      />\n\n      <button>Proceed to Checkout</button>\n    </div>\n  );\n}\n\nexport default Subtotal;\n"]},"metadata":{},"sourceType":"module"}